pkg:
  Controller:
    value: controller
    import: biz/controller
  Service:
    value: service
    import: biz/service
  Req:
    value: model
    import: biz/model
  Resp:
    value: response
    import: pkg/response
  Bind:
    value: internal
    import: biz/controller/internal
  Biz:
    value: biz



global:
  - name: register
    path: "{{.Pkg.Biz.Value}}/register.go"
    write: pointer
    handler-key: "New{{.ServiceName}}Router"
    handler: "\tNew{{.ServiceName}}Router(e)"
    body: |-
      // Code generated by go-server-gen. DO NOT EDIT.
      
      package biz
      import (
          "{{.Pkg.Engine.Import}}"
      )
      func Register(e {{.Pkg.Engine.Value}}) {
          //INSERT_POINT: DO NOT DELETE THIS LINE!
          {{- range $_, $Code := .Handlers }}
          {{$Code}}
          {{- end }}
      }

  - name: router
    path: "{{.Pkg.Biz.Value}}/router.go"
    write: append
    body: |-
      package biz
      import (
          "{{.Pkg.Engine.Import}}"
          "{{.ProjectName}}/{{.Pkg.Controller.Import}}"
          {{- if .HasMiddleware }}
          "{{.ProjectName}}/biz/middleware"
          {{- end}}
      )
      {{- range $_, $Code := .Handlers }}
      {{$Code}}
      {{- end }}
    handler-key: "New{{.ServiceName}}Router"
    handler: |
      func New{{.ServiceName}}Router(e {{.Pkg.Engine.Value}}) {
          {{.ServiceName | lowercaseFirst}} := e.Group(""
      {{- range $_, $md := .Middlewares -}}
      , {{$md}}
      {{- end -}}
      )
          {
              {{- range $_, $Api := .Apis}}
              {{$Api.ServiceName | lowercaseFirst}}.{{$Api.Method}}("{{$Api.Path}}"
              {{- range $_, $Handler := $Api.Handlers -}}
              {{- if hasPrefix $Handler "middleware" -}}
              , {{$Handler}}()
              {{- else -}}
              , {{$.Pkg.Controller.Value}}.{{$Handler}}
              {{- end -}}
              {{- end}})
              {{- end}}
          }
      }


service:
  - name: controller
    path: "{{.Pkg.Controller.Import}}/{{convertToWord .ServiceName `_`}}.go"
    write: append
    handler-key: "{{.FuncName}}"
    handler: |-
      // {{.FuncName}}
      // @Tags	{{convertToWord .ServiceName "-"}}
      // @Summary	{{.Summary}}
      {{- range $_, $Para := .ReqParam}}
      // @Param	{{$Para.Name}}	{{$Para.From}}	{{$Para.Type}}	{{$Para.Required}}	"{{$Para.Description}}"
      {{- end }}
      // @Success	200
      // @Router	{{.Path | getDocRouter}} [{{.Method}}]
      func {{.FuncName}}(
        {{- if eq .Pkg.Context.Value "*app.RequestContext" -}}
        _ context.Context, c {{.Pkg.Context.Value}}
        {{- else -}}
        c {{.Pkg.Context.Value}}
        {{- end -}}) {{.Pkg.ReturnType.Value}} {
          var req {{.Pkg.Req.Value}}.{{.ReqName}}
          if err := {{.Pkg.Bind.Value}}.New(c).BindJson(&req).Error; err != nil {
            {{- if eq .Pkg.Return.Value "" -}}
            response.ErrorRequest(c, err)
            return
            {{- else -}}
            return response.ErrorRequest(c, err)
            {{- end}}
          }
          {{.Pkg.Return.Value}} service.{{.FuncName}}(c, &req)
      }
    body: |-
      package controller
      import (
          "{{.Pkg.Context.Import}}"
          "{{.ProjectName}}/{{.Pkg.Req.Import}}"
          "{{.ProjectName}}/{{.Pkg.Resp.Import}}"
          "{{.ProjectName}}/{{.Pkg.Bind.Import}}"
          "{{.ProjectName}}/{{.Pkg.Service.Import}}"
          {{ if eq .Pkg.Context.Value "*app.RequestContext" -}}
          "context"
          {{- end}}
      )
      {{- range $_, $Code := .Handlers }}
      {{$Code}}
      {{- end }}

  - name: service
    path: "{{.Pkg.Service.Import}}/{{convertToWord .ServiceName `_`}}.go"
    write: append
    handler-key: "{{.FuncName}}"
    handler: |-
      func {{.FuncName}}(c {{.Pkg.Context.Value}}, req *{{.Pkg.Req.Value}}.{{.ReqName}}) {{.Pkg.ReturnType.Value}} {
        // you service code hear
        {{ if ne .Pkg.Return.Value "" }}
        return nil
        {{- end}}
      }
    body: |-
      package service
      import (
          "{{.Pkg.Context.Import}}"
          "{{.ProjectName}}/{{.Pkg.Req.Import}}"
      )
      {{- range $_, $Code := .Handlers }}
      {{$Code}}
      {{ end }}


messages:
  - name: model
    path: "biz/model/{{.IdlName}}.go"
    write: append
    body: |-
      package model
      {{- range $_, $Code := .Handlers }}
      {{$Code}}
      {{ end }}
    handler: |-
      {{.Source}}

